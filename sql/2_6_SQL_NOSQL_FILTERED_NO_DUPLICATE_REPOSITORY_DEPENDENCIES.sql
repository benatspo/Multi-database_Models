--Forks and sources view
CREATE VIEW SOURCE_AND_FORK_REPOSITORIES_VIEW AS
SELECT DISTINCT forks.REPOSITORY_NAME, forks.COMMITS_NUMBER, sources.REPOSITORY_NAME AS SOURCE_REPOSITORY_NAME, sources.COMMITS_NUMBER AS SOURCE_REPOSITORY_COMMITS_NUMBER
FROM SQL_NOSQL_DATASET_FILTERED_REPOSITORIES forks
JOIN SQL_NOSQL_DATASET_FILTERED_REPOSITORIES sources ON forks.SOURCE_FORK_REPOSITORY_NAME = sources.REPOSITORY_NAME
WHERE forks.FORK = "true";

-- View containing the database dependencies for the 2328 forked + corresponding source projects from the filtered projects
CREATE VIEW FORKS_AND_SOURCE_REPOSITORIES_WITH_DEPENDENCIES_VIEW AS
    SELECT DISTINCT dep.REPOSITORY_NAME, dep.DEPENDENCY_NAME
    FROM SQL_NOSQL_FILTERED_REPOSITORY_DEPENDENCIES dep
    WHERE dep.REPOSITORY_NAME IN (
        SELECT DISTINCT forks.REPOSITORY_NAME
        FROM SQL_NOSQL_DATASET_FILTERED_REPOSITORIES forks
                 JOIN SQL_NOSQL_DATASET_FILTERED_REPOSITORIES sources
                      ON forks.SOURCE_FORK_REPOSITORY_NAME = sources.REPOSITORY_NAME
        WHERE forks.FORK = "true"
    ) AND dep.DATASET_VERSION = (SELECT MAX(DATASET_VERSION) FROM SQL_NOSQL_FILTERED_REPOSITORY_DEPENDENCIES WHERE REPOSITORY_NAME = dep.REPOSITORY_NAME)
    UNION
    SELECT DISTINCT dep.REPOSITORY_NAME, dep.DEPENDENCY_NAME
    FROM SQL_NOSQL_FILTERED_REPOSITORY_DEPENDENCIES dep
    WHERE dep.REPOSITORY_NAME IN (
        SELECT DISTINCT forks.SOURCE_FORK_REPOSITORY_NAME
        FROM SQL_NOSQL_DATASET_FILTERED_REPOSITORIES forks
                 JOIN SQL_NOSQL_DATASET_FILTERED_REPOSITORIES sources
                      ON forks.SOURCE_FORK_REPOSITORY_NAME = sources.REPOSITORY_NAME
        WHERE forks.FORK = "true"
    ) AND dep.DATASET_VERSION = (SELECT MAX(DATASET_VERSION) FROM SQL_NOSQL_FILTERED_REPOSITORY_DEPENDENCIES WHERE REPOSITORY_NAME = dep.REPOSITORY_NAME)
;


CREATE TABLE FORK_AND_SOURCE_REPOSITORIES_WITH_DEPENDENCIES(
    SOURCE_REPOSITORY_NAME VARCHAR2,
    SOURCE_REPOSITORY_DEPENDENCIES VARCHAR2,
    FORK_REPOSITORY_NAME VARCHAR2,
    FORK_REPOSITORY_DEPENDENCIES VARCHAR2,
    HAVE_SAME_DEPENDENCIES boolean
);
INSERT INTO FORK_AND_SOURCE_REPOSITORIES_WITH_DEPENDENCIES
SELECT A.SOURCE_FORK_REPOSITORY_NAME,
       (SELECT GROUP_CONCAT(DEPENDENCY_NAME)
   FROM FORKS_AND_SOURCE_REPOSITORIES_WITH_DEPENDENCIES_VIEW
   WHERE REPOSITORY_NAME = A.SOURCE_FORK_REPOSITORY_NAME),
       A.REPOSITORY_NAME,
       (SELECT GROUP_CONCAT(DEPENDENCY_NAME)
    FROM FORKS_AND_SOURCE_REPOSITORIES_WITH_DEPENDENCIES_VIEW
    WHERE REPOSITORY_NAME = A.REPOSITORY_NAME),
       false
FROM FORK_WITH_SOURCE_REPOSITORIES_VIEW A;


--1353
DROP VIEW FORKS_WITH_SOURCE_REPOSITORY_NOT_IN_FILTERED_REPOSITORIES_VIEW;
CREATE VIEW FORKS_WITH_SOURCE_REPOSITORY_NOT_IN_FILTERED_REPOSITORIES_VIEW AS
SELECT REPOSITORY_NAME, FORK, SOURCE_FORK_REPOSITORY_NAME, COMMITS_NUMBER FROM SQL_NOSQL_DATASET_FILTERED_REPOSITORIES WHERE REPOSITORY_NAME IN (
   SELECT DISTINCT REPOSITORY_NAME
   FROM (SELECT DISTINCT forks.REPOSITORY_NAME
		 FROM SQL_NOSQL_DATASET_FILTERED_REPOSITORIES forks
		 WHERE forks.FORK = "true"
			 EXCEPT
		 SELECT DISTINCT forks.REPOSITORY_NAME
		 FROM SQL_NOSQL_DATASET_FILTERED_REPOSITORIES forks
				  JOIN SQL_NOSQL_DATASET_FILTERED_REPOSITORIES sources
					   ON forks.SOURCE_FORK_REPOSITORY_NAME = sources.REPOSITORY_NAME
		 WHERE forks.FORK = "true"
		)
);

CREATE VIEW UNFILTERED_SOURCE_REPOSITORY_WITH_FILTERED_FORKED_CHILDREN AS
SELECT DISTINCT p1.SOURCE_FORK_REPOSITORY_NAME AS FATHER_REPOSITORY_NAME, p1.REPOSITORY_NAME
FROM FORKS_WITH_SOURCE_REPOSITORY_NOT_IN_FILTERED_REPOSITORIES_VIEW p1
WHERE p1.FORK = "true"
AND EXISTS(
        SELECT p2.REPOSITORY_NAME
        FROM FORKS_WITH_SOURCE_REPOSITORY_NOT_IN_FILTERED_REPOSITORIES_VIEW p2
        WHERE p2.fork == "true"
          AND p2.SOURCE_FORK_REPOSITORY_NAME = p1.SOURCE_FORK_REPOSITORY_NAME
          AND p2.REPOSITORY_NAME <> p1.REPOSITORY_NAME
    )
;

CREATE VIEW BROTHERS_REPOSITORIES_WITH_DEPENDENCIES_VIEW AS
SELECT dep.REPOSITORY_NAME, dep.DEPENDENCY_NAME
    FROM SQL_NOSQL_FILTERED_REPOSITORY_DEPENDENCIES dep
    WHERE dep.REPOSITORY_NAME IN (
        SELECT DISTINCT children.REPOSITORY_NAME
        FROM UNFILTERED_SOURCE_REPOSITORY_WITH_FILTERED_FORKED_CHILDREN children
    )
    AND dep.DATASET_VERSION = (SELECT MAX(DATASET_VERSION) FROM SQL_NOSQL_FILTERED_REPOSITORY_DEPENDENCIES WHERE REPOSITORY_NAME = dep.REPOSITORY_NAME)
;


CREATE TABLE BROTHER_AND_FATHER_REPOSITORIES_WITH_DEPENDENCIES(
    FATHER_REPOSITORY_NAME VARCHAR2,
    BROTHER_REPOSITORY_NAME VARCHAR2,
    BROTHER_REPOSITORY_DEPENDENCIES VARCHAR2,
    HAVE_SAME_DEPENDENCIES boolean
);
INSERT INTO BROTHER_AND_FATHER_REPOSITORIES_WITH_DEPENDENCIES
SELECT A.FATHER_REPOSITORY_NAME, A.REPOSITORY_NAME,
       (SELECT GROUP_CONCAT(DEPENDENCY_NAME)
   FROM BROTHERS_REPOSITORIES_WITH_DEPENDENCIES_VIEW
   WHERE REPOSITORY_NAME = A.REPOSITORY_NAME),
       false
FROM UNFILTERED_SOURCE_REPOSITORY_WITH_FILTERED_FORKED_CHILDREN A
WHERE A.FATHER_REPOSITORY_NAME <> '';

UPDATE BROTHER_AND_FATHER_REPOSITORIES_WITH_DEPENDENCIES SET HAVE_SAME_DEPENDENCIES = true WHERE FATHER_REPOSITORY_NAME IN (SELECT DISTINCT FATHER_REPOSITORY_NAME FROM BROTHER_AND_FATHER_REPOSITORIES_WITH_DEPENDENCIES GROUP BY FATHER_REPOSITORY_NAME, BROTHER_REPOSITORY_DEPENDENCIES HAVING COUNT() > 1);


CREATE VIEW FORK_AND_SOURCE_REPOSITORIES_WITH_DATASET_VERSIONS_COUNT AS
SELECT forkAndSource.FORK_REPOSITORY_NAME, (SELECT COUNT(DISTINCT DATASET_VERSION) FROM SQL_NOSQL_FILTERED_REPOSITORY_DEPENDENCIES WHERE REPOSITORY_NAME = forkAndSource.FORK_REPOSITORY_NAME) AS FORK_DATASET_VERSIONS_COUNT, forkAndSource.SOURCE_REPOSITORY_NAME, (SELECT COUNT(DISTINCT DATASET_VERSION) FROM SQL_NOSQL_FILTERED_REPOSITORY_DEPENDENCIES WHERE REPOSITORY_NAME = forkAndSource.SOURCE_REPOSITORY_NAME) AS SOURCE_DATASET_VERSIONS_COUNT
FROM FORK_AND_SOURCE_REPOSITORIES_WITH_DEPENDENCIES forkAndSource WHERE HAVE_SAME_DEPENDENCIES = TRUE;




--Filtered repository dependencies table without duplicates: should contain 40.609 distinct repositories
CREATE TABLE SQL_NOSQL_FILTERED_NO_DUPLICATE_REPOSITORY_DEPENDENCIES
(
	ID INTEGER,
	REPOSITORY_NAME VARCHAR2 not null,
	DEPENDENCY_MANIFEST_PLATFORM VARCHAR2 not null,
	DEPENDENCY_MANIFEST_FILE VARCHAR2 not null,
	DEPENDENCY_NAME VARCHAR2 not null,
	DEPENDENCY_ID INTEGER,
	DEPENDENCY_LANGUAGE VARCHAR2 not null,
	DBMS_TYPE VARCHAR2,
	DBMS VARCHAR2,
	ODM INTEGER(1) default 0,
	DATASET_VERSION INTEGER not null,
	ID_TECH INTEGER not null
		constraint NOSQL_REPOSITORY_DEPENDENCIES_pk
			primary key autoincrement
);

create index "SQL_NOSQL_FILTERED_NO_DUPLICATE_REPOSITORY_DEPENDENCIES-DATASET_VERSION"
	on SQL_NOSQL_FILTERED_NO_DUPLICATE_REPOSITORY_DEPENDENCIES (DATASET_VERSION);

create index "SQL_NOSQL_FILTERED_NO_DUPLICATE_REPOSITORY_DEPENDENCIES-DBMS"
	on SQL_NOSQL_FILTERED_NO_DUPLICATE_REPOSITORY_DEPENDENCIES (DBMS);

create index "SQL_NOSQL_FILTERED_NO_DUPLICATE_REPOSITORY_DEPENDENCIES-DBMS_TYPE"
	on SQL_NOSQL_FILTERED_NO_DUPLICATE_REPOSITORY_DEPENDENCIES (DBMS_TYPE);

create index "SQL_NOSQL_FILTERED_NO_DUPLICATE_REPOSITORY_DEPENDENCIES-NOSQL_DEPENDENCY_LANGUAGE"
	on SQL_NOSQL_FILTERED_NO_DUPLICATE_REPOSITORY_DEPENDENCIES (DEPENDENCY_LANGUAGE);

create index "SQL_NOSQL_FILTERED_NO_DUPLICATE_REPOSITORY_DEPENDENCIES-NOSQL_DEPENDENCY_NAME"
	on SQL_NOSQL_FILTERED_NO_DUPLICATE_REPOSITORY_DEPENDENCIES (DEPENDENCY_NAME);

create index "SQL_NOSQL_FILTERED_NO_DUPLICATE_REPOSITORY_DEPENDENCIES-ODM"
	on SQL_NOSQL_FILTERED_NO_DUPLICATE_REPOSITORY_DEPENDENCIES (ODM);

create index "SQL_NOSQL_FILTERED_NO_DUPLICATE_REPOSITORY_DEPENDENCIES-REPOSITORY_NAME"
	on SQL_NOSQL_FILTERED_NO_DUPLICATE_REPOSITORY_DEPENDENCIES (REPOSITORY_NAME);


INSERT INTO SQL_NOSQL_FILTERED_NO_DUPLICATE_REPOSITORY_DEPENDENCIES
SELECT * FROM SQL_NOSQL_FILTERED_REPOSITORY_DEPENDENCIES WHERE
REPOSITORY_NAME IN (
    SELECT DISTINCT REPOSITORY_NAME FROM SQL_NOSQL_FILTERED_REPOSITORY_DEPENDENCIES
    EXCEPT
    SELECT DISTINCT FORK_REPOSITORY_NAME FROM FORK_AND_SOURCE_REPOSITORIES_WITH_DEPENDENCIES WHERE HAVE_SAME_DEPENDENCIES = TRUE
    EXCEPT
    SELECT BROTHER_REPOSITORY_NAME FROM SIBLINGS_AND_SOURCE_REPOSITORIES_WITH_DATASET_VERSIONS_COUNT WHERE BROTHER_REPOSITORY_NAME NOT IN (
        SELECT BROTHER_REPOSITORY_NAME FROM SIBLINGS_AND_SOURCE_REPOSITORIES_WITH_DATASET_VERSIONS_COUNT GROUP BY FATHER_REPOSITORY_NAME HAVING MAX(SIBLING_DATASET_VERSIONS_COUNT)
    )
);

CREATE TABLE SQL_NOSQL_DBMS_TYPE_SURVIVAL_ANALYSIS_REPO_GLOBAL_NO_DUPLICATE (
    REPOSITORY_NAME VARCHAR2,
    MIN_VERSION INTEGER,
    MAX_VERSION INTEGER,
    SOURCE_STATE VARCHAR2,
    FINAL_STATE VARCHAR2,
    NB_SOURCE_DBMS_TYPES INTEGER,
    NB_FINAL_DBMS_TYPES INTEGER,
    NB_EVOLUTION INTEGER,
    SOURCE_STATE_TEXT VARCHAR2,
    FINAL_STATE_TEXT VARCHAR2,
    GLOBAL_EVOLUTION_TYPE VARCHAR2,
    GLOBAL_EVOLUTION_TYPE_COUNT INTEGER,
    GLOBAL_EVOLUTION_TYPE_COUNT_FILTERED INTEGER
);

INSERT INTO SQL_NOSQL_DBMS_TYPE_SURVIVAL_ANALYSIS_REPO_GLOBAL_NO_DUPLICATE
SELECT * FROM SQL_NOSQL_DBMS_TYPE_SURVIVAL_ANALYSIS_REPO_GLOBAL WHERE REPOSITORY_NAME IN (SELECT DISTINCT REPOSITORY_NAME FROM SQL_NOSQL_FILTERED_NO_DUPLICATE_REPOSITORY_DEPENDENCIES);